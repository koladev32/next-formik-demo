import type { NextPage } from 'next'
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import 'bootstrap/dist/css/bootstrap.min.css';
import {useState} from "react";
import {useFormik} from "formik";
import * as Yup from "yup";


const Home: NextPage = () => {
    // This will be used to show a message if the submission is
    // successful
    const [message, setMessage] = useState("");
    const [submitted, setSubmitted] = useState(false);

    const formik = useFormik({
        initialValues: {
            email: "",
            name: "",
            message: ""
        },
        onSubmit: values => {
            setMessage("Form submitted");
            setSubmitted(true);
        },
        validationSchema: Yup.object({
            name: Yup.string().trim().required("The name is required"),
            email: Yup.string().email('Must be a valid email').required("The email is required"),
            message: Yup.string().trim().required("Please enter a message"),
        })
    });

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
          <form className="p-5 m-5 w-50" onSubmit={formik.handleSubmit}>
              <div className="form-group">
                  <label htmlFor="name">Name</label>
                  <input
                      type="text"
                      className="form-control"
                      value={formik.values.name}
                      onChange={formik.handleChange}
                      onBlur={formik.handleBlur}
                      name="name"
                      placeholder="John Doe"/>
                  {formik.errors.name ? (
                      <div className="text-danger">{formik.errors.name}</div>
                  ) : null}

              </div>
              <div className="form-group">
                  <label htmlFor="email">Email</label>
                  <input
                      type="email"
                      name="email"
                      className="form-control"
                      value={formik.values.email}
                      onChange={formik.handleChange}
                      onBlur={formik.handleBlur}
                      placeholder="johndoe@yopmail.com"
                  />
                  {formik.errors.email ? (
                      <div className="text-danger">{formik.errors.email}</div>
                  ) : null}
              </div>
              <div className="form-group">
                  <label htmlFor="message">Message</label>
                  <textarea
                      name="message"
                      className="form-control"
                      placeholder="Your message ..."
                      value={formik.values.message}
                      onChange={formik.handleChange}
                      onBlur={formik.handleBlur}
                  />
                  {formik.errors.message ? (
                      <div className="text-danger">{formik.errors.message}</div>
                  ) : null}
              </div>

              <button type="submit" className="btn btn-primary mt-2">Send</button>
          </form>
          <div hidden={!submitted} className="alert alert-primary" role="alert">
              {message}
          </div>
      </main>

    </div>
  )
}

export default Home
